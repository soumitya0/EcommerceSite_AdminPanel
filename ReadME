BackEnd

        -> npm i express bcryptjs jsonwebtoken config express-validator mongoose
        -> Index.js

Client 
        -> add proxy server
        
BackEnd        
        -> Route and define Route
        -> config
        -> DB connection 
        -> Schema
        -> adding  functionality in API
        -> express validator (Schema to check all the data give or not)
        -> with the user with same email then we will return Error if not then Create a new Schema     
        -> Bcrypt to hash the password
        -> JWT - paylooad and secret  (secret is in config)

******** functionality in API *********

Routes/Admin_Api
        -> register user   (http://localhost:8000/api/admin)      
        -> Create Schema






1/5 
        ->deployed to heroku
        















 //Print hellow 10 time 
 import React, { Component, Fragment } from "react";
import "./PaginationItemstyle.css";
class PaginationItem extends Component {
  constructor(props) {
    super(props);

    this.state = {
      lengt: [],
    };

    // {
    //   [...Array(5)].map(() => console.log("Hello"));
    // }
  }

  render() {
    let row = [];
    for (let i = 0; i < 10; i++) {
      row.push(
        <li>
          <a href="#">{i}</a>{" "}
        </li>,
      );
      
    }
    return (
      <Fragment>
        <div class="pagination">{row}</div>
      </Fragment>
    );
  }
}

export default PaginationItem;
       



STOCK





child to parents data pass
  error DashBoardCartegory.js(parenst) and categoryList.js is child







  TODO (3/5) : 
          this , sync awaitss



